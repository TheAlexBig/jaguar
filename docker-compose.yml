version: '3.8'

services:
  db:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - '${MYSQL_DB_PORT}:${MYSQL_DB_PORT}'
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "--silent"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - mysql_data:/var/lib/mysql
  back-end:
    build:
      context: ./archivos-rojos
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    environment:
      CONNECTION_TYPE: ${CONNECTION_TYPE}
      NODE_ENV: ${NODE_ENV}
      BACKEND_PORT: ${BACKEND_PORT}
      BACKEND_CONNECTION_LIMIT: ${BACKEND_CONNECTION_LIMIT}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DB_PORT: ${MYSQL_DB_PORT}
      CUSTOM_HOST: db
    ports:
      - '${BACKEND_PORT}:${BACKEND_PORT}'
  front-end:
    build:
      context: ./cabezas-de-jaguar
      dockerfile: Dockerfile
      args:
        FRONTEND_PORT: ${FRONTEND_PORT}
    depends_on:
      - back-end
    environment:
      FRONTEND_PORT: ${FRONTEND_PORT}
    ports:
      - '${FRONTEND_PORT}:${FRONTEND_PORT}'
  nginx:
    image: nginx
    ports:
      - '80:80'
    environment:
      BACKEND_PORT: ${BACKEND_PORT}
      FRONTEND_PORT: ${FRONTEND_PORT}
    volumes:
      - ./nginx-proxy/nginx.conf.template:/etc/nginx/nginx.conf.template
    depends_on:
      - front-end
      - back-end
    restart: always
    entrypoint: sh -c 'chmod +x /docker-entrypoint.sh && /docker-entrypoint.sh'

volumes:
  mysql_data:
    driver: local